Харківський національний університет радіоелектроніки
Факультет комп’ютерних наук
Кафедра програмної інженерії


ЗВІТ
до лабораторного заняття №1 з дисципліни
“Архітектура програмного забезпечення”


Виконав:
ст. гр. ПЗПІ-22-6 
Іванов Д.О.
Перевірив:
ст. викладач кат. ПІ
Сокорчук І.П.


Харків 2025


1. ІСТОРІЯ ЗМІН
№   Дата        Версія звіту   Опис змін
1   24.08.2025  0.1            Створено початковий варіант звіту


2. ЗАВДАННЯ
2.1. Створити документ Vision & Scope для програмної системи згідно з методичними рекомендаціями.
2.2. Описати актуальність проблеми, яку вирішує система, а також існуючі аналоги.
2.3. Визначити призначення системи та основну бізнес-логіку.
2.4. Розкрити функціональність серверної частини, IoT-клієнта, веб- та мобільного клієнтів.
2.5. Визначити зацікавлені сторони, технології та інструменти, які будуть застосовані у проєкті.
2.6. Підготувати звіт, включно з додатками (відеозапис, слайди, UML-діаграми).


3. ОПИС ВИКОНАНОЇ РОБОТИ
Було проведено аналіз проблеми та визначено необхідність створення програмної системи FoodCare Monitor System для моніторингу умов зберігання харчових продуктів. Система об’єднує серверну частину, IoT-сенсори, веб- та мобільний клієнти.  
Розроблено документ Vision & Scope, що відображає ключові вимоги до системи, опис її архітектури, призначення та основних функціональних можливостей.  
Виділено можливі напрями розвитку системи у наступних релізах та визначено обмеження, які можуть виникнути під час впровадження.


4. ВИСНОВКИ
У результаті виконання лабораторної роботи створено унікальний опис програмної системи у форматі Vision & Scope.  
Було визначено актуальність проблеми, описано аналоги, сформульовано бізнес-логіку та функціональність усіх частин системи.  
Також проаналізовано інструменти для розробки та окреслено потенційних користувачів. Робота дала можливість закріпити знання щодо структури документації та принципів архітектурного опису програмного забезпечення.


ДОДАТОК А
Відеозапис доповіді на YouTube: https://youtu.be/example123

Хронологія виступу:
0:20 – Вступ
1:40 – 1.1. Аналіз проблеми
3:05 – 1.2. Аналіз аналогів
4:50 – 2.1. Призначення системи
6:15 – 2.2. Бізнес-логіка
7:45 – 3.1. Серверна частина та IoT-клієнт
9:20 – 3.2. Веб- та мобільний клієнти
10:55 – 4.3. Інструменти проєкту
12:00 – Висновки


ДОДАТОК Б
Vision and Scope Document
for
FoodCare Monitor System
Версія 1.0
Підготовлено ст. гр. ПЗПІ-22-6 Івановим Дмитром
Харківський національний університет радіоелектроніки
24.08.2025


Table of Contents
Revision History
1. Business Requirements
   1.1 Background
   1.2 Existing Solutions
2. Vision of the Solution
   2.1 Vision Statement
   2.2 Major Features
3. Scope and Limitations
   3.1 Server Side and IoT Client
   3.2 Web and Mobile Client
4. Business Context
   4.1 Stakeholders
   4.2 Project Timeline
   4.3 Technologies and Tools


Revision History
Name            Date       Reason For Changes     Version
Dmytro Ivanov   24.08.2025 Створено документ      1.0


1. Business Requirements
1.1 Background
Сфера зберігання харчових продуктів стикається з проблемами псування продукції через порушення температурного режиму та вологості. Відсутність автоматизованих інструментів контролю призводить до фінансових втрат і погіршення якості продукції. Необхідне створення інтегрованої системи, що дозволяє моніторити умови зберігання в режимі реального часу та своєчасно реагувати на відхилення.

1.2 Existing Solutions
На ринку існують часткові рішення: 
- системи для холодових складів (наприклад, SmartColdChain), 
- промислові сенсори контролю (Honeywell, Bosch).  
Однак вони часто потребують великих фінансових вкладень і не забезпечують комплексного підходу з інтеграцією веб- та мобільних сервісів.  
Пропонована система відрізнятиметься доступністю, модульністю та зручністю використання для малого і середнього бізнесу.  
Можливі способи монетизації: підписка на сервіс, продаж ліцензій та розширені пакети підтримки.

2. Vision of the Solution
2.1 Vision Statement
FoodCare Monitor System – це інноваційна платформа для автоматизації моніторингу умов зберігання харчових продуктів. Вона дозволить компаніям уникати втрат, підвищувати безпеку та якість продукції, а також оптимізувати витрати.

2.2 Major Features
- Збір даних від IoT-сенсорів (температура, вологість, CO₂).  
- Серверна обробка та збереження даних.  
- Сповіщення про порушення умов (push-повідомлення, email).  
- Веб-панель для адміністрування складів і продуктів.  
- Мобільний застосунок для контролю та отримання повідомлень.  
- Розмежування доступу за ролями (адміністратор, менеджер, працівник складу).  
- Аналітичні звіти з історією умов зберігання.

3. Scope and Limitations
3.1 Server Side and IoT Client
Сервер обробляє запити, зберігає дані, відповідає за безпеку та автентифікацію.  
IoT-клієнт забезпечує підключення сенсорів та передачу даних.  
У початковому релізі: базові CRUD-операції з даними, інтеграція сертифікованих сенсорів, базові сповіщення.

3.2 Web and Mobile Client
Веб-клієнт: інтерфейс для адміністраторів і менеджерів, управління користувачами та параметрами.  
Мобільний клієнт: сповіщення, перегляд поточних показників та історії даних.  
У майбутніх версіях – підтримка QR-кодів для маркування партій, AI-модулі для прогнозування псування.

4. Business Context
4.1 Stakeholders
Основні сторони: власники складів, логістичні компанії, торговельні мережі, працівники складів, адміністратори системи.

4.2 Project Timeline
Початковий реліз: 3–4 місяці.  
Подальший розвиток: інтеграція аналітики та штучного інтелекту – протягом року.

4.3 Technologies and Tools
- Серверна частина: C#, ASP.NET Core, PostgreSQL, Entity Framework.  
- Веб-клієнт: Angular, TypeScript, HTML, CSS.  
- Мобільний застосунок: .NET MAUI (Android).  
- IoT-клієнт: C++ для інтеграції з сенсорами.  
- Інфраструктура: Docker, GitHub, CI/CD-інструменти.

Список використаних джерел:
1. Honeywell IoT Solutions. URL: https://www.honeywell.com
2. Bosch Connected Industry. URL: https://www.bosch-connected-industry.com
3. SmartColdChain. URL: https://smartcoldchain.com


ДОДАТОК В
UML Use-Case Diagram (текстове подання):

Актори:
- Адміністратор
- Менеджер складу
- Працівник складу
- IoT сенсор

Сценарії використання:
Адміністратор → Керування користувачами, Налаштування системи
Менеджер складу → Перегляд звітів, Керування продуктами, Перегляд умов зберігання
Працівник складу → Реєстрація поставок, Перегляд поточних даних
IoT сенсор → Надання даних про температуру та вологість
